{"mappings":"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","sources":["<anon>","src/index.ts","src/api.ts","src/product.ts","src/ui.ts"],"sourcesContent":["// src/index.ts\n// src/api.ts\n// src/Product.ts\nclass $13eba0d1de0c2415$export$264ad599d7cef668 {\n    constructor(data){\n        this._title = data.title;\n        this._imageUrl = data.thumbnail;\n        this._stock = data.stock;\n        this._price = data.price;\n        this._discountPercentage = data.discountPercentage;\n        this._category = data.category;\n        this._rating = data.rating;\n    }\n    // Getters\n    get title() {\n        return this._title;\n    }\n    get imageUrl() {\n        return this._imageUrl;\n    }\n    get stock() {\n        return this._stock;\n    }\n    get price() {\n        return this._price;\n    }\n    get discountPercentage() {\n        return this._discountPercentage;\n    }\n    get category() {\n        return this._category;\n    }\n    get rating() {\n        return this._rating;\n    }\n    // Metod: Beräkna rabatterat pris\n    getDiscountedPrice() {\n        const discountedPrice = this._price * (1 - this._discountPercentage / 100);\n        return parseFloat(discountedPrice.toFixed(2));\n    }\n    // Metod: Uppdatera lagersaldo (minskar med angivet belopp, t.ex. -1 vid köp)\n    updateStock(amount) {\n        // Säkerställ att saldot inte blir negativt\n        if (amount < 0 && Math.abs(amount) > this._stock) this._stock = 0;\n        else {\n            this._stock += amount;\n            if (this._stock < 0) this._stock = 0;\n        }\n    }\n}\n\n\nasync function $b6a0b7007b404cc4$export$2516233d5dae329e() {\n    const response = await fetch('https://dummyjson.com/products');\n    const data = await response.json();\n    // Skapa en instans av Product för varje hämtad produkt\n    const products = data.products.map((item)=>new (0, $13eba0d1de0c2415$export$264ad599d7cef668)(item));\n    return products;\n}\n\n\n// src/ui.ts\nfunction $2f4cd9ba4fceb80d$export$99d4d4500133757a(product) {\n    const template = document.getElementById('product-card-template');\n    if (!template) throw new Error('Product card template not found');\n    // Klona templaten\n    const cardFragment = template.content.cloneNode(true);\n    const card = cardFragment.firstElementChild;\n    // Fyll i titel\n    const titleElement = card.querySelector('.product-title');\n    if (titleElement) titleElement.textContent = product.title;\n    // Fyll i bild\n    const imageElement = card.querySelector('.product-image');\n    if (imageElement) {\n        imageElement.src = product.imageUrl;\n        imageElement.alt = product.title;\n    }\n    // Fyll i lagersaldo\n    const stockElement = card.querySelector('.product-stock');\n    if (stockElement) stockElement.textContent = `Lagersaldo: ${product.stock}`;\n    // Fyll i rabatterat pris\n    const discountedPriceElement = card.querySelector('.product-discounted-price');\n    if (discountedPriceElement) discountedPriceElement.textContent = `Rabatterat pris: $${product.getDiscountedPrice()}`;\n    // Konfigurera knappen för att lägga till produkten i kundvagnen\n    const button = card.querySelector('.add-to-cart');\n    if (button) button.addEventListener('click', ()=>{\n        product.updateStock(-1);\n        if (stockElement) stockElement.textContent = `Lagersaldo: ${product.stock}`;\n    });\n    return card;\n}\nfunction $2f4cd9ba4fceb80d$export$701310ed366ede44(products) {\n    const container = document.getElementById('product-container');\n    if (!container) return;\n    container.innerHTML = ''; // Rensa container för att undvika duplicering\n    products.forEach((product)=>{\n        const card = $2f4cd9ba4fceb80d$export$99d4d4500133757a(product);\n        container.appendChild(card);\n    });\n}\n\n\n// Om du vill använda filtreringsfunktionerna:\n// import { filterByCategory, sortByPriceAscending } from './filter';\nasync function $b4e14b6b8da86996$var$init() {\n    try {\n        const products = await (0, $b6a0b7007b404cc4$export$2516233d5dae329e)();\n        // Exempel på filtrering/sortering:\n        // const filteredProducts = filterByCategory('smartphones', products);\n        // const sortedProducts = sortByPriceAscending(filteredProducts);\n        (0, $2f4cd9ba4fceb80d$export$701310ed366ede44)(products);\n    } catch (error) {\n        console.error('Error fetching products:', error);\n    }\n}\n$b4e14b6b8da86996$var$init();\n\n\n//# sourceMappingURL=FE24-JS2-MP2-Matti-Walli.ab5a3b8f.js.map\n","// src/index.ts\r\nimport { fetchProducts } from './api';\r\nimport { displayProducts } from './ui';\r\n// Om du vill använda filtreringsfunktionerna:\r\n// import { filterByCategory, sortByPriceAscending } from './filter';\r\n\r\nasync function init(): Promise<void> {\r\n  try {\r\n    const products = await fetchProducts();\r\n    \r\n    // Exempel på filtrering/sortering:\r\n    // const filteredProducts = filterByCategory('smartphones', products);\r\n    // const sortedProducts = sortByPriceAscending(filteredProducts);\r\n    \r\n    displayProducts(products);\r\n  } catch (error: unknown) {\r\n    console.error('Error fetching products:', error);\r\n  }\r\n}\r\n\r\ninit();\r\n","// src/api.ts\r\nimport { ProductData } from './types';\r\nimport { Product } from './product';\r\n\r\nexport async function fetchProducts(): Promise<Product[]> {\r\n  const response: Response = await fetch('https://dummyjson.com/products');\r\n  const data: { products: ProductData[] } = await response.json();\r\n  // Skapa en instans av Product för varje hämtad produkt\r\n  const products: Product[] = data.products.map((item: ProductData): Product => new Product(item));\r\n  return products;\r\n}\r\n","// src/Product.ts\r\nimport { ProductData } from './types';\r\n\r\nexport class Product {\r\n  // Privata egenskaper\r\n  private _title: string;\r\n  private _imageUrl: string;\r\n  private _stock: number;\r\n  private _price: number;\r\n  private _discountPercentage: number;\r\n  private _category: string;\r\n  private _rating: number;\r\n\r\n  constructor(data: ProductData) {\r\n    this._title = data.title;\r\n    this._imageUrl = data.thumbnail;\r\n    this._stock = data.stock;\r\n    this._price = data.price;\r\n    this._discountPercentage = data.discountPercentage;\r\n    this._category = data.category;\r\n    this._rating = data.rating;\r\n  }\r\n\r\n  // Getters\r\n  public get title(): string {\r\n    return this._title;\r\n  }\r\n\r\n  public get imageUrl(): string {\r\n    return this._imageUrl;\r\n  }\r\n\r\n  public get stock(): number {\r\n    return this._stock;\r\n  }\r\n\r\n  public get price(): number {\r\n    return this._price;\r\n  }\r\n\r\n  public get discountPercentage(): number {\r\n    return this._discountPercentage;\r\n  }\r\n\r\n  public get category(): string {\r\n    return this._category;\r\n  }\r\n\r\n  public get rating(): number {\r\n    return this._rating;\r\n  }\r\n\r\n  // Metod: Beräkna rabatterat pris\r\n  public getDiscountedPrice(): number {\r\n    const discountedPrice: number = this._price * (1 - this._discountPercentage / 100);\r\n    return parseFloat(discountedPrice.toFixed(2));\r\n  }\r\n\r\n  // Metod: Uppdatera lagersaldo (minskar med angivet belopp, t.ex. -1 vid köp)\r\n  public updateStock(amount: number): void {\r\n    // Säkerställ att saldot inte blir negativt\r\n    if (amount < 0 && Math.abs(amount) > this._stock) {\r\n      this._stock = 0;\r\n    } else {\r\n      this._stock += amount;\r\n      if (this._stock < 0) {\r\n        this._stock = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n","// src/ui.ts\r\nimport { Product } from './product';\r\n\r\n\r\n\r\nexport function createProductCard(product: Product): HTMLElement {\r\n\r\n  const template: HTMLTemplateElement | null = document.getElementById('product-card-template') as HTMLTemplateElement;\r\n  if (!template) {\r\n    throw new Error('Product card template not found');\r\n  }\r\n\r\n  // Klona templaten\r\n  const cardFragment: DocumentFragment = template.content.cloneNode(true) as DocumentFragment;\r\n  const card: HTMLElement = cardFragment.firstElementChild as HTMLElement;\r\n\r\n  // Fyll i titel\r\n  const titleElement: HTMLElement | null = card.querySelector('.product-title');\r\n  if (titleElement) {\r\n    titleElement.textContent = product.title;\r\n  }\r\n\r\n  // Fyll i bild\r\n  const imageElement: HTMLImageElement | null = card.querySelector('.product-image');\r\n  if (imageElement) {\r\n    imageElement.src = product.imageUrl;\r\n    imageElement.alt = product.title;\r\n  }\r\n\r\n  // Fyll i lagersaldo\r\n  const stockElement: HTMLElement | null = card.querySelector('.product-stock');\r\n  if (stockElement) {\r\n    stockElement.textContent = `Lagersaldo: ${product.stock}`;\r\n  }\r\n\r\n  // Fyll i rabatterat pris\r\n  const discountedPriceElement: HTMLElement | null = card.querySelector('.product-discounted-price');\r\n  if (discountedPriceElement) {\r\n    discountedPriceElement.textContent = `Rabatterat pris: $${product.getDiscountedPrice()}`;\r\n  }\r\n\r\n  // Konfigurera knappen för att lägga till produkten i kundvagnen\r\n  const button: HTMLButtonElement | null = card.querySelector('.add-to-cart');\r\n  if (button) {\r\n    button.addEventListener('click', (): void => {\r\n      product.updateStock(-1);\r\n      if (stockElement) {\r\n        stockElement.textContent = `Lagersaldo: ${product.stock}`;\r\n      }\r\n    });\r\n  }\r\n\r\n  return card;\r\n}\r\n\r\nexport function displayProducts(products: Product[]): void {\r\n  const container: HTMLElement | null = document.getElementById('product-container');\r\n  if (!container) return;\r\n\r\n  container.innerHTML = ''; // Rensa container för att undvika duplicering\r\n  products.forEach((product: Product): void => {\r\n    const card: HTMLElement = createProductCard(product);\r\n    container.appendChild(card);\r\n  });\r\n}\r\n"],"names":["$13eba0d1de0c2415$export$264ad599d7cef668","constructor","data","_title","title","_imageUrl","thumbnail","_stock","stock","_price","price","_discountPercentage","discountPercentage","_category","category","_rating","rating","imageUrl","getDiscountedPrice","parseFloat","discountedPrice","toFixed","updateStock","amount","Math","abs","$b6a0b7007b404cc4$export$2516233d5dae329e","response","fetch","json","products","map","item","$b4e14b6b8da86996$var$init","container","document","getElementById","innerHTML","forEach","product","card","$2f4cd9ba4fceb80d$export$99d4d4500133757a","template","Error","cardFragment","content","cloneNode","firstElementChild","titleElement","querySelector","textContent","imageElement","src","alt","stockElement","discountedPriceElement","button","addEventListener","appendChild","error","console"],"version":3,"file":"FE24-JS2-MP2-Matti-Walli.ab5a3b8f.js.map"}